1 新建app startapp appname
2 migrations 用于数据库迁移的工作
3 apps文件 也就是Django的配置文件 tests 其实就是一个自动化测试的模块
4 setting文件-ROOT_URLCONF = 'JCdjango.urls' 根路径下的路由器
5 setting文件-WSGI_APPLICATION = 'JCdjango.wsgi.application' 也就是wsgi服务器相互映射的一个关系
---->路由器与视图的基本使用<----
1 路由器Url  视图view
1 路由器就是网址 每一个网址就是代表一个不同的网页 在Django中url也被称之为urlconf
2 每一个url对应了一个唯一的Views视图函数
3 根目录项目中的Url是根路径，根路由可以集所有的应用路由
4 通过继集成或者说绑定到根路径集中的使用
urlpatterns = [
    path('admin/', admin.site.urls),
]
5 urlpatterns 也就是整个url的集合 每个元素代表一个url元素
  include是将应用红的url包含起来
6 view 也就是mvt中的v部分负责处理用户请求中生成的相应内容的，然后在页面或者其他文档中展示
---->URL中的参数设置<----
1 在URL后面开始使用？键与值用等号相连接，每个键值用&号区分 比如127.0.0.1:8080/app/?name=dewei&age=31
2 在路由器中的参数分开 http:127.0.0.1:app/dawei/30
3 django2中的url变量 字符串类型<str:name> 整数形式<int:age> 这个可以看一下书
4 支持url类型的方法  from django.urls import path 是Django中2.0以前的方法，但是在  from django.conf.urls import url
  Django2.0以前之前的方法是不支持 url参数的方法 只是支持正则表达式方法
5 为url设置一个别名 path('index/',view,name='add')

6 视图读取参数
  1 形式参数  -request.GET.get(参数名称)
  2 以分隔符形式的参数
  3 def index(request,参数名,参数名)：
    print(参数名称)

7 强行将视图分为三个部分
  1 用户请求request
  2 对用户请求的逻辑处理handler
  3 将处理后的数据返回给用户response
8 在 view视图中
  浏览器向服务器发送的请求对象，包含用户信息，请求内容和请求方法
  request.GET  获取Url上的形式参数
  request.POST 获取post提交的数据
  request.path 获取氢气的路径
  request.method  获取请求的方法
  request.COOKIES 请求过来的cookies
  request.user 请求用户对象 可以通过他判断用户是否登录 并获取用户信息
  request.session 一个既可以读又可以写的类似于字典对象
  request.META 一个标准的字典形式 包含所有的HTTP首

视图的面向对象写法
  from django.views.generic import View
  Class index(View):
    def index(request):
        return xxx

---->扩展知识 restul规范 http协议<----
1 url定位资源 简单的来说 通过一个url地址我们可以可以让我们知道这个地址所需要我们提供的资源功能是什么
2 简单的说url一切都是资源
3 GET方法获取资源的时候使用 POST提交资源的时候比如我们注册一个用户的时候 PUT修改资源的时候使用 DELETE删除资源的时候使用比如注销我们的账号
4

